CREATE DATABASE IF NOT EXISTS OVS;
USE OVS;

CREATE TABLE IF NOT EXISTS user (
    id INT AUTO_INCREMENT PRIMARY KEY,
    firstname VARCHAR(255) NOT NULL,
    lastname VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS reg_user (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mobile VARCHAR(15) NOT NULL UNIQUE,
    address TEXT NOT NULL,
    photo VARCHAR(255) NOT NULL,
    role VARCHAR(50) NOT NULL,
    status INT DEFAULT 0,
    votes INT DEFAULT 0,
    password VARCHAR(255) NOT NULL
);

-- 1. Create `positions` table
CREATE TABLE IF NOT EXISTS `positions` (
    `id` INT AUTO_INCREMENT PRIMARY KEY,
    `position_name` VARCHAR(255) NOT NULL,
    `description` TEXT
);

-- 2. Create `candidates` table
CREATE TABLE IF NOT EXISTS `candidates` (
    `id` INT AUTO_INCREMENT PRIMARY KEY,
    `name` VARCHAR(255) NOT NULL,
    `email` VARCHAR(255) NOT NULL UNIQUE,
    `position_id` INT NOT NULL,  -- Foreign key linking to the positions table
    `status` TINYINT(1) DEFAULT 0,  -- 0 for inactive, 1 for active
    FOREIGN KEY (`position_id`) REFERENCES `positions`(`id`) ON DELETE CASCADE
);

-- 3. Create `reg_user` table for storing voters
CREATE TABLE IF NOT EXISTS `reg_user` (
    `id` INT AUTO_INCREMENT PRIMARY KEY,
    `name` VARCHAR(255) NOT NULL,
    `email` VARCHAR(255) NOT NULL UNIQUE,
    `mobile` VARCHAR(15) NOT NULL,
    `password` VARCHAR(255) NOT NULL,
    `cpassword` VARCHAR(255) NOT NULL,  -- Confirm password (for verification)
    `address` TEXT,
    `photo` VARCHAR(255),  -- Path to the user's uploaded photo
    `role` VARCHAR(50) DEFAULT 'voter',  -- Role like 'admin' or 'voter'
    `gender` VARCHAR(10),
    `status` TINYINT(1) DEFAULT 0,  -- 0 for inactive voter, 1 for active voter
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 4. Create `votes` table
CREATE TABLE IF NOT EXISTS `votes` (
    `id` INT AUTO_INCREMENT PRIMARY KEY,
    `voter_id` INT NOT NULL,  -- Foreign key linking to the voters
    `candidate_id` INT NOT NULL,  -- Foreign key linking to the candidates
    `status` TINYINT(1) DEFAULT 0,  -- 0 for not voted, 1 for voted
    FOREIGN KEY (`voter_id`) REFERENCES `reg_user`(`id`) ON DELETE CASCADE,
    FOREIGN KEY (`candidate_id`) REFERENCES `candidates`(`id`) ON DELETE CASCADE
);





